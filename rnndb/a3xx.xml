<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<enum name="a3xx_render_mode" inline="yes">
	<value name="RB_RENDERING_PASS" value="0"/>
	<value name="RB_RESOLVE_PASS" value="2"/>
</enum>

<enum name="a3xx_resolve_clear_mode" inline="yes">
	<value name="RESOLVE" value="1"/>
</enum>

<enum name="a3xx_tile_mode" inline="yes">
	<value name="LINEAR" value="0"/>
	<value name="TILE_32X32" value="2"/>
</enum>

<enum name="a3xx_color_format" inline="yes">
	<value name="RB_R8G8B8A8_UNORM" value="8"/>
</enum>

<!-- guessing that this matches a2xx -->
<enum name="a3xx_surface_endian">
	<value name="ENDIAN_NONE" value="0"/>
	<value name="ENDIAN_8IN16" value="1"/>
	<value name="ENDIAN_8IN32" value="2"/>
	<value name="ENDIAN_16IN32" value="3"/>
	<value name="ENDIAN_8IN64" value="4"/>
	<value name="ENDIAN_8IN128" value="5"/>
</enum>

<!-- I assume these values match a2xx (which matches GL, r6xx, etc, etc -->
<enum name="a3xx_compare_func" inline="yes">
	<value name="FUNC_NEVER" value="0"/>
	<value name="FUNC_LESS" value="1"/>
	<value name="FUNC_EQUAL" value="2"/>
	<value name="FUNC_LEQUAL" value="3"/>
	<value name="FUNC_GREATER" value="4"/>
	<value name="FUNC_NOTEQUAL" value="5"/>
	<value name="FUNC_GEQUAL" value="6"/>
	<value name="FUNC_ALWAYS" value="7"/>
</enum>

<enum name="a3xx_stencil_op" inline="yes">
	<value name="STENCIL_KEEP" value="0"/>
	<value name="STENCIL_ZERO" value="1"/>
	<value name="STENCIL_REPLACE" value="2"/>
	<value name="STENCIL_INCR_CLAMP" value="3"/>
	<value name="STENCIL_DECR_CLAMP" value="4"/>
	<value name="STENCIL_INVERT" value="5"/>
	<value name="STENCIL_INCR_WRAP" value="6"/>
	<value name="STENCIL_DECR_WRAP" value="7"/>
</enum>

<enum name="a3xx_threadmode" inline="yes">
	<value value="0" name="MULTI"/>
	<value value="1" name="SINGLE?"/>
</enum>

<enum name="a3xx_instrbuffermode" inline="yes">
	<value value="0" name="NO_BUFFER?"/>
	<value value="1" name="BUFFER"/>
</enum>

<enum name="a3xx_threadsize" inline="yes">
	<value value="0" name="TWO_QUADS"/>
	<value value="1" name="FOUR_QUADS"/>
</enum>

<!-- I guess this is probably same as a2xx enum pa_su_sc_draw: -->
<enum name="a3xx_pc_draw">
	<value name="PC_DRAW_POINTS" value="0"/>
	<value name="PC_DRAW_LINES" value="1"/>
	<value name="PC_DRAW_TRIANGLES" value="2"/>
</enum>

<enum name="a3xx_fmt" inline="yes">
	<value name="FMT_FLOAT_32" value="0x0"/>
	<value name="FMT_FLOAT_32_32" value="0x1"/>
	<value name="FMT_FLOAT_32_32_32" value="0x2"/>
	<value name="FMT_FLOAT_32_32_32_32" value="0x3"/>

	<value name="FMT_FIXED_32" value="0x8"/>
	<value name="FMT_FIXED_32_32" value="0x9"/>
	<value name="FMT_FIXED_32_32_32" value="0xa"/>
	<value name="FMT_FIXED_32_32_32_32" value="0xb"/>

	<value name="FMT_SHORT_16" value="0x10"/>
	<value name="FMT_SHORT_16_16" value="0x11"/>
	<value name="FMT_SHORT_16_16_16" value="0x12"/>
	<value name="FMT_SHORT_16_16_16_16" value="0x13"/>
	<value name="FMT_USHORT_16" value="0x14"/>
	<value name="FMT_USHORT_16_16" value="0x15"/>
	<value name="FMT_USHORT_16_16_16" value="0x16"/>
	<value name="FMT_USHORT_16_16_16_16" value="0x17"/>
	<value name="FMT_NORM_SHORT_16" value="0x18"/>
	<value name="FMT_NORM_SHORT_16_16" value="0x19"/>
	<value name="FMT_NORM_SHORT_16_16_16" value="0x1a"/>
	<value name="FMT_NORM_SHORT_16_16_16_16" value="0x1b"/>
	<value name="FMT_NORM_USHORT_16" value="0x1c"/>
	<value name="FMT_NORM_USHORT_16_16" value="0x1d"/>
	<value name="FMT_NORM_USHORT_16_16_16" value="0x1e"/>
	<value name="FMT_NORM_USHORT_16_16_16_16" value="0x1f"/>

	<value name="FMT_UBYTE_8" value="0x28"/>
	<value name="FMT_UBYTE_8_8" value="0x29"/>
	<value name="FMT_UBYTE_8_8_8" value="0x2a"/>
	<value name="FMT_UBYTE_8_8_8_8" value="0x2b"/>
	<value name="FMT_NORM_UBYTE_8" value="0x2c"/>
	<value name="FMT_NORM_UBYTE_8_8" value="0x2d"/>
	<value name="FMT_NORM_UBYTE_8_8_8" value="0x2e"/>
	<value name="FMT_NORM_UBYTE_8_8_8_8" value="0x2f"/>
	<value name="FMT_BYTE_8" value="0x30"/>
	<value name="FMT_BYTE_8_8" value="0x31"/>
	<value name="FMT_BYTE_8_8_8" value="0x32"/>
	<value name="FMT_BYTE_8_8_8_8" value="0x33"/>
	<value name="FMT_NORM_BYTE_8" value="0x34"/>
	<value name="FMT_NORM_BYTE_8_8" value="0x35"/>
	<value name="FMT_NORM_BYTE_8_8_8" value="0x36"/>
	<value name="FMT_NORM_BYTE_8_8_8_8" value="0x37"/>
</enum>

<domain name="A3XX" width="32">
	<!-- RBBM registers -->
	<reg32 offset="0x0000" name="RBBM_HW_VERSION"/>
	<reg32 offset="0x0001" name="RBBM_HW_RELEASE"/>
	<reg32 offset="0x0002" name="RBBM_HW_CONFIGURATION"/>
	<reg32 offset="0x0010" name="RBBM_CLOCK_CTL"/>
	<reg32 offset="0x0012" name="RBBM_SP_HYST_CNT"/>
	<reg32 offset="0x0018" name="RBBM_SW_RESET_CMD"/>
	<reg32 offset="0x0020" name="RBBM_AHB_CTL0"/>
	<reg32 offset="0x0021" name="RBBM_AHB_CTL1"/>
	<reg32 offset="0x0022" name="RBBM_AHB_CMD"/>
	<reg32 offset="0x0027" name="RBBM_AHB_ERROR_STATUS"/>
	<reg32 offset="0x002e" name="RBBM_GPR0_CTL"/>
	<reg32 offset="0x0030" name="RBBM_STATUS"/>
	<reg32 offset="0x0033" name="RBBM_WAIT_IDLE_CLOCKS_CTL"/>
	<reg32 offset="0x0050" name="RBBM_INTERFACE_HANG_INT_CTL"/>
	<reg32 offset="0x0051" name="RBBM_INTERFACE_HANG_MASK_CTL0"/>
	<reg32 offset="0x0054" name="RBBM_INTERFACE_HANG_MASK_CTL1"/>
	<reg32 offset="0x0057" name="RBBM_INTERFACE_HANG_MASK_CTL2"/>
	<reg32 offset="0x005a" name="RBBM_INTERFACE_HANG_MASK_CTL3"/>
	<reg32 offset="0x0061" name="RBBM_INT_CLEAR_CMD"/>
	<reg32 offset="0x0063" name="RBBM_INT_0_MASK"/>
	<reg32 offset="0x0064" name="RBBM_INT_0_STATUS"/>
	<reg32 offset="0x0080" name="RBBM_PERFCTR_CTL"/>
	<reg32 offset="0x0088" name="RBBM_GPU_BUSY_MASKED"/>
	<reg32 offset="0x00e0" name="RBBM_PERFCTR_SP_7_LO"/>
	<reg32 offset="0x00e1" name="RBBM_PERFCTR_SP_7_HI"/>
	<reg32 offset="0x00ec" name="RBBM_PERFCTR_PWR_1_LO"/>
	<reg32 offset="0x00ed" name="RBBM_PERFCTR_PWR_1_HI"/>
	<reg32 offset="0x0100" name="RBBM_RBBM_CTL"/>
	<reg32 offset="0x0100" name="RBBM_RBBM_CTL"/>
	<reg32 offset="0x0111" name="RBBM_DEBUG_BUS_CTL"/>
	<reg32 offset="0x0112" name="RBBM_DEBUG_BUS_DATA_STATUS"/>

	<!-- CP registers -->
	<reg32 offset="0x01c9" name="CP_PFP_UCODE_ADDR"/>
	<reg32 offset="0x01ca" name="CP_PFP_UCODE_DATA"/>
	<reg32 offset="0x01cc" name="CP_ROQ_ADDR"/>
	<reg32 offset="0x01cd" name="CP_ROQ_DATA"/>
	<reg32 offset="0x01d1" name="CP_MERCIU_ADDR"/>
	<reg32 offset="0x01d2" name="CP_MERCIU_DATA"/>
	<reg32 offset="0x01d3" name="CP_MERCIU_DATA2"/>
	<reg32 offset="0x01da" name="CP_MEQ_ADDR"/>
	<reg32 offset="0x01db" name="CP_MEQ_DATA"/>
	<reg32 offset="0x045c" name="CP_HW_FAULT"/>
	<reg32 offset="0x045e" name="CP_PROTECT_CTRL"/>
	<reg32 offset="0x045f" name="CP_PROTECT_STATUS"/>
	<reg32 offset="0x0460" name="CP_PROTECT_REG_0"/>
	<reg32 offset="0x0461" name="CP_PROTECT_REG_1"/>
	<reg32 offset="0x0462" name="CP_PROTECT_REG_2"/>
	<reg32 offset="0x0463" name="CP_PROTECT_REG_3"/>
	<reg32 offset="0x0464" name="CP_PROTECT_REG_4"/>
	<reg32 offset="0x0465" name="CP_PROTECT_REG_5"/>
	<reg32 offset="0x0466" name="CP_PROTECT_REG_6"/>
	<reg32 offset="0x0467" name="CP_PROTECT_REG_7"/>
	<reg32 offset="0x0468" name="CP_PROTECT_REG_8"/>
	<reg32 offset="0x0469" name="CP_PROTECT_REG_9"/>
	<reg32 offset="0x046a" name="CP_PROTECT_REG_A"/>
	<reg32 offset="0x046b" name="CP_PROTECT_REG_B"/>
	<reg32 offset="0x046c" name="CP_PROTECT_REG_C"/>
	<reg32 offset="0x046d" name="CP_PROTECT_REG_D"/>
	<reg32 offset="0x046e" name="CP_PROTECT_REG_E"/>
	<reg32 offset="0x046f" name="CP_PROTECT_REG_F"/>
	<reg32 offset="0x054d" name="CP_AHB_FAULT"/>
	<reg32 offset="0x057a" name="CP_SCRATCH_REG2"/>
	<reg32 offset="0x057b" name="CP_SCRATCH_REG3"/>

	<!-- GRAS registers -->
	<reg32 offset="0x2040" name="GRAS_CL_CLIP_CNTL"/>
	<reg32 offset="0x2044" name="GRAS_CL_GB_CLIP_ADJ"/>
	<reg32 offset="0x2048" name="GRAS_CL_VPORT_XOFFSET" type="float"/>
	<reg32 offset="0x2049" name="GRAS_CL_VPORT_XSCALE" type="float"/>
	<reg32 offset="0x204a" name="GRAS_CL_VPORT_YOFFSET" type="float"/>
	<reg32 offset="0x204b" name="GRAS_CL_VPORT_YSCALE" type="float"/>
	<reg32 offset="0x204c" name="GRAS_CL_VPORT_ZOFFSET" type="float"/>
	<reg32 offset="0x204d" name="GRAS_CL_VPORT_ZSCALE" type="float"/>
	<reg32 offset="0x2068" name="GRAS_SU_POINT_MINMAX"/>
	<reg32 offset="0x2069" name="GRAS_SU_POINT_SIZE"/>
	<reg32 offset="0x206c" name="GRAS_SU_POLY_OFFSET_SCALE"/>
	<reg32 offset="0x206d" name="GRAS_SU_POLY_OFFSET_OFFSET"/>
	<reg32 offset="0x2070" name="GRAS_SU_MODE_CONTROL">
		<!-- guessing on size -->
		<bitfield name="LINEHALFWIDTH" low="2" high="15" type="uint"/>
	</reg32>
	<reg32 offset="0x2072" name="GRAS_SC_CONTROL">
		<!-- complete wild-ass-guess for sizes of these bitfields.. -->
		<bitfield name="RENDER_MODE" low="4" high="8"/>
		<bitfield name="RASTER_MODE" low="12" high="16"/>
	</reg32>

	<bitset name="a3xx_reg_xy_wstl" inline="yes">
		<bitfield name="WINDOW_OFFSET_DISABLE" pos="31" type="boolean"/>  <!-- I assume it is same as a2xx -->
		<bitfield name="X" low="0" high="14" type="uint"/>
		<bitfield name="Y" low="16" high="30" type="uint"/>
	</bitset>
	<bitset name="a3xx_reg_xy" inline="yes">
		<bitfield name="X" low="0" high="14" type="uint"/>
		<bitfield name="Y" low="16" high="30" type="uint"/>
	</bitset>

	<reg32 offset="0x2074" name="GRAS_SC_SCREEN_SCISSOR_TL" type="a3xx_reg_xy"/>
	<reg32 offset="0x2075" name="GRAS_SC_SCREEN_SCISSOR_BR" type="a3xx_reg_xy"/>
	<reg32 offset="0x2079" name="GRAS_SC_WINDOW_SCISSOR_TL" type="a3xx_reg_xy_wstl"/>
	<reg32 offset="0x207a" name="GRAS_SC_WINDOW_SCISSOR_BR" type="a3xx_reg_xy"/>

	<!-- RB registers -->
	<reg32 offset="0x20c0" name="RB_MODE_CONTROL">
		<!-- guess on the # of bits here.. -->
		<bitfield name="RENDER_MODE" low="8" high="10" type="a3xx_render_mode"/>
		<bitfield name="MARB_CACHE_SPLIT_MODE" pos="15" type="boolean"/>
		<bitfield name="PACKER_TIMER_ENABLE" pos="16" type="boolean"/>
	</reg32>
	<reg32 offset="0x20c1" name="RB_RENDER_CONTROL">
		<bitfield name="BIN_WIDTH" low="4" high="11" shr="5" type="uint"/>
		<bitfield name="DISABLE_COLOR_PIPE" pos="12" type="boolean"/>
		<bitfield name="ALPHA_TEST_FUNC" low="24" high="26" type="a3xx_compare_func"/>
	</reg32>
	<reg32 offset="0x20c2" name="RB_MSAA_CONTROL">
		<bitfield name="MSAA_DISABLE" pos="10" type="boolean"/>
		<bitfield name="SAMPLE_MASK" low="16" high="31" type="hex"/>
	</reg32>
	<reg32 offset="0x20c4" name="RB_MRT_CONTROL0"/>
	<reg32 offset="0x20c5" name="RB_MRT_BUF_INFO0"/>
	<reg32 offset="0x20c6" name="RB_MRT_BUF_BASE0"/>
	<reg32 offset="0x20c7" name="RB_MRT_BLEND_CONTROL0"/>
	<reg32 offset="0x20c8" name="RB_MRT_CONTROL1"/>
	<reg32 offset="0x20c9" name="RB_MRT_BUF_INFO1"/>
	<reg32 offset="0x20ca" name="RB_MRT_BUF_BASE1"/>
	<reg32 offset="0x20cb" name="RB_MRT_BLEND_CONTROL1"/>
	<reg32 offset="0x20cc" name="RB_MRT_CONTROL2"/>
	<reg32 offset="0x20cd" name="RB_MRT_BUF_INFO2"/>
	<reg32 offset="0x20ce" name="RB_MRT_BUF_BASE2"/>
	<reg32 offset="0x20cf" name="RB_MRT_BLEND_CONTROL2"/>
	<reg32 offset="0x20d0" name="RB_MRT_CONTROL3"/>
	<reg32 offset="0x20d1" name="RB_MRT_BUF_INFO3"/>
	<reg32 offset="0x20d2" name="RB_MRT_BUF_BASE3"/>
	<reg32 offset="0x20d3" name="RB_MRT_BLEND_CONTROL3"/>
	<reg32 offset="0x20e4" name="RB_BLEND_RED"/>
	<reg32 offset="0x20e5" name="RB_BLEND_GREEN"/>
	<reg32 offset="0x20e6" name="RB_BLEND_BLUE"/>
	<!--
		seems to be set to either 0x3c0000ff or 0x00000000.. maybe upper
		bits are some field or bitmask??  Or maybe we have different bit-
		fields for each MRT?
	 -->
	<reg32 offset="0x20e7" name="RB_BLEND_ALPHA"/>
	<reg32 offset="0x20ec" name="RB_COPY_CONTROL">
		<!-- not sure # of bits -->
		<bitfield name="MODE" low="4" high="5" type="a3xx_resolve_clear_mode"/>
		<bitfield name="GMEM_BASE" low="14" high="31" shr="14" type="hex"/>
	</reg32>
	<reg32 offset="0x20ed" name="RB_COPY_DEST_BASE">
		<bitfield name="BASE" low="4" high="31" shr="5" type="hex"/>
	</reg32>
	<reg32 offset="0x20ee" name="RB_COPY_DEST_PITCH">
		<doc>actually, appears to be pitch in bytes, so really is a stride</doc>
		<!-- not actually sure about max pitch... -->
		<bitfield name="PITCH" low="0" high="31" shr="5" type="uint"/>
	</reg32>
	<reg32 offset="0x20ef" name="RB_COPY_DEST_INFO">
		<bitfield name="TILE" low="0" high="1" type="a3xx_tile_mode"/>
		<!-- not actually sure # of bits yet: -->
		<bitfield name="FORMAT" low="2" high="7" type="a3xx_color_format"/>
		<bitfield name="COMPONENT_ENABLE" low="14" high="17" type="hex"/>
		<bitfield name="ENDIAN" low="18" high="20" type="a3xx_surface_endian"/>
	</reg32>
	<reg32 offset="0x2100" name="RB_DEPTH_CONTROL">
		<!--
			guessing that this matches a2xx with the stencil fields
			moved out into RB_STENCIL_CONTROL?
		 -->
		<bitfield name="STENCIL_ENABLE" pos="0" type="boolean"/>
		<bitfield name="Z_ENABLE" pos="1" type="boolean"/>
		<bitfield name="Z_WRITE_ENABLE" pos="2" type="boolean"/>
		<bitfield name="EARLY_Z_ENABLE" pos="3" type="boolean"/>
		<bitfield name="ZFUNC" low="4" high="6" type="a3xx_compare_func"/>
		<bitfield name="BF_ENABLE" pos="7" type="boolean"/>
	</reg32>
	<reg32 offset="0x2104" name="RB_STENCIL_CONTROL">
		<bitfield name="FUNC" low="8" high="10" type="a3xx_compare_func"/>
		<bitfield name="FAIL" low="11" high="13" type="a3xx_stencil_op"/>
		<bitfield name="ZPASS" low="14" high="16" type="a3xx_stencil_op"/>
		<bitfield name="ZFAIL" low="17" high="19" type="a3xx_stencil_op"/>
		<bitfield name="FUNC_BF" low="20" high="22" type="a3xx_compare_func"/>
		<bitfield name="FAIL_BF" low="23" high="25" type="a3xx_stencil_op"/>
		<bitfield name="ZPASS_BF" low="26" high="28" type="a3xx_stencil_op"/>
		<bitfield name="ZFAIL_BF" low="29" high="31" type="a3xx_stencil_op"/>
	</reg32>

	<!-- PC registers -->
	<reg32 offset="0x21e4" name="PC_VSTREAM_CONTROL"/>
	<reg32 offset="0x21ea" name="PC_VERTEX_REUSE_BLOCK_CNTL"/>
	<reg32 offset="0x21ec" name="PC_PRIM_VTX_CNTL">
		<bitfield name="STRIDE_IN_VPC" low="0" high="4" type="uint"/>
		<bitfield name="POLYMODE_FRONT_PTYPE" low="5" high="7" type="a3xx_pc_draw"/>
		<bitfield name="POLYMODE_BACK_PTYPE" low="8" high="10" type="a3xx_pc_draw"/>
		<bitfield name="PROVOKING_VTX_LAST" pos="25" type="boolean"/>
	</reg32>
	<reg32 offset="0x21ed" name="PC_RESTART_INDEX"/>

	<!-- HLSQ registers -->
	<bitset name="a3xx_hlsq_vs_fs_control_reg" inline="yes">
		<bitfield name="CONSTLENGTH" low="0" high="11" type="uint"/>
		<bitfield name="CONSTSTARTOFFSET" low="12" high="23" type="uint"/>
		<bitfield name="INSTRLENGTH" low="24" high="31" type="uint"/>
	</bitset>
	<bitset name="a3xx_hlsq_const_vs_fs_presv_range_reg" inline="yes">
		<!-- are these a3xx_regid?? -->
		<bitfield name="STARTENTRY" low="0" high="15"/>
		<bitfield name="ENDENTRY" low="16" high="31"/>
	</bitset>

	<reg32 offset="0x2200" name="HLSQ_CONTROL_0_REG">
		<bitfield name="FSTHREADSIZE" pos="4" type="a3xx_threadsize"/>
		<bitfield name="FSSUPERTHREADENABLE" pos="6" type="boolean"/>
		<bitfield name="SPSHADERRESTART" pos="9" type="boolean"/>
		<bitfield name="RESERVED2" pos="10" type="boolean"/>
		<bitfield name="CHUNKDISABLE" pos="26" type="boolean"/>
		<bitfield name="CONSTSWITCHMODE" pos="27" type="boolean"/>
		<bitfield name="LAZYUPDATEDISABLE" pos="28" type="boolean"/>
		<bitfield name="SPCONSTFULLUPDATE" pos="29" type="boolean"/>
		<bitfield name="TPFULLUPDATE" pos="30" type="boolean"/>
	</reg32>
	<reg32 offset="0x2201" name="HLSQ_CONTROL_1_REG">
		<bitfield name="VSTHREADSIZE" pos="6" type="a3xx_threadsize"/>
		<bitfield name="VSSUPERTHREADENABLE" pos="8" type="boolean"/>
		<bitfield name="RESERVED1" pos="9" type="boolean"/>
	</reg32>
	<reg32 offset="0x2202" name="HLSQ_CONTROL_2_REG">
		<bitfield name="PRIMALLOCTHRESHOLD" low="26" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x2203" name="HLSQ_CONTROL_3_REG"/>
	<reg32 offset="0x2204" name="HLSQ_VS_CONTROL_REG" type="a3xx_hlsq_vs_fs_control_reg"/>
	<reg32 offset="0x2205" name="HLSQ_FS_CONTROL_REG" type="a3xx_hlsq_vs_fs_control_reg"/>
	<reg32 offset="0x2206" name="HLSQ_CONST_VSPRESV_RANGE_REG" type="a3xx_hlsq_const_vs_fs_presv_range_reg"/>
	<reg32 offset="0x2207" name="HLSQ_CONST_FSPRESV_RANGE_REG" type="a3xx_hlsq_const_vs_fs_presv_range_reg"/>
	<reg32 offset="0x220a" name="HLSQ_CL_NDRANGE_0_REG"/>
	<reg32 offset="0x220c" name="HLSQ_CL_NDRANGE_2_REG"/>
	<reg32 offset="0x2211" name="HLSQ_CL_CONTROL_0_REG"/>
	<reg32 offset="0x2212" name="HLSQ_CL_CONTROL_1_REG"/>
	<reg32 offset="0x2214" name="HLSQ_CL_KERNEL_CONST_REG"/>
	<reg32 offset="0x2215" name="HLSQ_CL_KERNEL_GROUP_X_REG"/>
	<reg32 offset="0x2217" name="HLSQ_CL_KERNEL_GROUP_Z_REG"/>
	<reg32 offset="0x221a" name="HLSQ_CL_WG_OFFSET_REG"/>

	<!-- VFD registers -->
	<bitset name="a3xx_vfd_fetch_instr_0_x" inline="yes">
		<bitfield name="FETCHSIZE" low="0" high="6" type="uint"/>
		<bitfield name="BUFSTRIDE" low="7" high="16" type="uint"/>
		<bitfield name="SWITCHNEXT" pos="17" type="boolean"/>
		<bitfield name="INDEXCODE" low="18" high="23" type="uint"/>
		<bitfield name="STEPRATE" low="24" high="31" type="uint"/>
	</bitset>
	<bitset name="a3xx_vfd_decode_instr" inline="yes">
		<bitfield name="WRITEMASK" low="0" high="3" type="hex"/>
		<!-- not sure if this is a bit flag and another flag above it, or?? -->
		<bitfield name="CONSTFILL" pos="4" type="boolean"/>
		<bitfield name="FORMAT" low="6" high="11" type="a3xx_fmt"/>
		<bitfield name="REGID" low="12" high="19" type="a3xx_regid"/>
		<doc>SHIFTCNT appears to be size, ie. FLOAT_32_32_32 is 12, and BYTE_8 is 1</doc>
		<bitfield name="SHIFTCNT" low="24" high="28" type="uint"/>
		<bitfield name="LASTCOMPVALID" pos="29" type="boolean"/>
		<bitfield name="SWITCHNEXT" pos="30" type="boolean"/>
	</bitset>

	<reg32 offset="0x2240" name="VFD_CONTROL_0">
		<bitfield name="TOTALATTRTOVS" low="0" high="17" type="uint"/>
		<bitfield name="PACKETSIZE" low="18" high="21" type="uint"/>
		<doc>STRMDECINSTRCNT and STRMFETCHINSTRCNT seem to be set same as MAXSTORAGE</doc>
		<bitfield name="STRMDECINSTRCNT" low="22" high="26" type="uint"/>
		<bitfield name="STRMFETCHINSTRCNT" low="27" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x2241" name="VFD_CONTROL_1">
		<doc>MAXSTORAGE could be # of attributes/vbo's</doc>
		<bitfield name="MAXSTORAGE" low="0" high="15" type="uint"/>
		<!--
			always seem to be 252 except when entire register is zero'd,
			but in these cases it is overwritten with non-zero value
			before the next DRAW_INDX
		 -->
		<bitfield name="REGID4VTX" low="16" high="23" type="a3xx_regid"/>
		<bitfield name="REGID4INST" low="24" high="31" type="a3xx_regid"/>
	</reg32>
	<reg32 offset="0x2242" name="VFD_INDEX_MIN"/>
	<reg32 offset="0x2243" name="VFD_INDEX_MAX"/>
	<reg32 offset="0x2244" name="VFD_INSTANCEID_OFFSET"/>
	<reg32 offset="0x2245" name="VFD_INDEX_OFFSET"/>
	<reg32 offset="0x2246" name="VFD_FETCH_INSTR_0_0" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2247" name="VFD_FETCH_INSTR_1_0"/>
	<reg32 offset="0x2248" name="VFD_FETCH_INSTR_0_1" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2249" name="VFD_FETCH_INSTR_1_1"/>
	<reg32 offset="0x224a" name="VFD_FETCH_INSTR_0_2" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x224b" name="VFD_FETCH_INSTR_1_2"/>
	<reg32 offset="0x224c" name="VFD_FETCH_INSTR_0_3" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x224d" name="VFD_FETCH_INSTR_1_3"/>
	<reg32 offset="0x224e" name="VFD_FETCH_INSTR_0_4" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x224f" name="VFD_FETCH_INSTR_1_4"/>
	<reg32 offset="0x2250" name="VFD_FETCH_INSTR_0_5" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2251" name="VFD_FETCH_INSTR_1_5"/>
	<reg32 offset="0x2252" name="VFD_FETCH_INSTR_0_6" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2253" name="VFD_FETCH_INSTR_1_6"/>
	<reg32 offset="0x2254" name="VFD_FETCH_INSTR_0_7" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2255" name="VFD_FETCH_INSTR_1_7"/>
	<reg32 offset="0x2256" name="VFD_FETCH_INSTR_0_8" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2257" name="VFD_FETCH_INSTR_1_8"/>
	<reg32 offset="0x2258" name="VFD_FETCH_INSTR_0_9" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2259" name="VFD_FETCH_INSTR_1_9"/>
	<reg32 offset="0x225a" name="VFD_FETCH_INSTR_0_A" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x225b" name="VFD_FETCH_INSTR_1_A"/>
	<reg32 offset="0x225c" name="VFD_FETCH_INSTR_0_B" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x225d" name="VFD_FETCH_INSTR_1_B"/>
	<reg32 offset="0x225e" name="VFD_FETCH_INSTR_0_C" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x225f" name="VFD_FETCH_INSTR_1_C"/>
	<reg32 offset="0x2260" name="VFD_FETCH_INSTR_0_D" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2261" name="VFD_FETCH_INSTR_1_D"/>
	<reg32 offset="0x2262" name="VFD_FETCH_INSTR_0_E" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2263" name="VFD_FETCH_INSTR_1_E"/>
	<reg32 offset="0x2264" name="VFD_FETCH_INSTR_0_F" type="a3xx_vfd_fetch_instr_0_x"/>
	<reg32 offset="0x2265" name="VFD_FETCH_INSTR_1_F"/>
	<reg32 offset="0x2266" name="VFD_DECODE_INSTR_0" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2267" name="VFD_DECODE_INSTR_1" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2268" name="VFD_DECODE_INSTR_2" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2269" name="VFD_DECODE_INSTR_3" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226a" name="VFD_DECODE_INSTR_4" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226b" name="VFD_DECODE_INSTR_5" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226c" name="VFD_DECODE_INSTR_6" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226d" name="VFD_DECODE_INSTR_7" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226e" name="VFD_DECODE_INSTR_8" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x226f" name="VFD_DECODE_INSTR_9" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2270" name="VFD_DECODE_INSTR_A" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2271" name="VFD_DECODE_INSTR_B" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2272" name="VFD_DECODE_INSTR_C" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2273" name="VFD_DECODE_INSTR_D" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2274" name="VFD_DECODE_INSTR_E" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x2275" name="VFD_DECODE_INSTR_F" type="a3xx_vfd_decode_instr"/>
	<reg32 offset="0x227e" name="VFD_VS_THREADING_THRESHOLD"/>

	<!-- VPC registers -->
	<reg32 offset="0x2280" name="VPC_ATTR">
		<bitfield name="TOTALATTR" low="0" high="11" type="uint"/>
		<bitfield name="THRDASSIGN" low="12" high="27" type="uint"/>
		<bitfield name="LMSIZE" low="28" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x2281" name="VPC_PACK">
		<!-- these are always seem to be set to same as TOTALATTR -->
		<bitfield name="NUMFPNONPOSVAR" low="8" high="15" type="uint"/>
		<bitfield name="NUMNONPOSVSVAR" low="16" high="23" type="uint"/>
	</reg32>
	<!--
		interpolate or interrupt?  former makes sense, but kernel calls
		it both "VARRYING_INTERUPT_MODE_n (sic) and VARYING_INTERP_MODE_n
		(and few other misspell variations..)
	 -->
	<reg32 offset="0x2282" name="VPC_VARYING_INTERP_MODE_0"/>
	<reg32 offset="0x2283" name="VPC_VARYING_INTERP_MODE_1"/>
	<reg32 offset="0x2284" name="VPC_VARYING_INTERP_MODE_2"/>
	<reg32 offset="0x2285" name="VPC_VARYING_INTERP_MODE_3"/>
	<reg32 offset="0x2286" name="VPC_VARYING_PS_REPL_MODE_0"/>
	<reg32 offset="0x2287" name="VPC_VARYING_PS_REPL_MODE_1"/>
	<reg32 offset="0x2288" name="VPC_VARYING_PS_REPL_MODE_2"/>
	<reg32 offset="0x2289" name="VPC_VARYING_PS_REPL_MODE_3"/>
	<reg32 offset="0x228a" name="VPC_VARY_CYLWRAP_ENABLE_0"/>
	<reg32 offset="0x228b" name="VPC_VARY_CYLWRAP_ENABLE_1"/>

	<!-- SP registers -->
	<bitset name="a3xx_vs_fs_length_reg" inline="yes">
		<bitfield name="SHADERLENGTH" low="0" high="31" type="uint"/>
	</bitset>
	<bitset name="a3xx_sp_vs_fs_ctrl_reg0" inline="yes">
		<bitfield name="THREADMODE" pos="0" type="a3xx_threadmode"/>
		<bitfield name="INSTRBUFFERMODE" pos="1" type="a3xx_instrbuffermode"/>
		<!-- maybe CACHEINVALID is two bits?? -->
		<bitfield name="CACHEINVALID" pos="2" type="boolean"/>
		<doc>
			The full/half register footprint is in units of four components,
			so if r0.x is used, that counts as all of r0.[xyzw] as used.
			There are separate full/half register footprint values as the
			full and half registers are independent (not overlapping).
			Presumably the thread scheduler hardware allocates the full/half
			register names from the actual physical register file and
			handles the register renaming.
		</doc>
		<bitfield name="HALFREGFOOTPRINT" low="4" high="9" type="uint"/>
		<bitfield name="FULLREGFOOTPRINT" low="10" high="17" type="uint"/>
		<!-- maybe INOUTREGOVERLAP is a bitflag? -->
		<bitfield name="INOUTREGOVERLAP" low="18" high="19" type="uint"/>
		<bitfield name="THREADSIZE" pos="20" type="a3xx_threadsize"/>
		<bitfield name="SUPERTHREADMODE" pos="21" type="boolean"/>
		<bitfield name="PIXLODENABLE" pos="22" type="boolean"/>
		<doc>
			From regspec:
			SP_FS_CTRL_REG0.FS_LENGTH [31:24]: FS length, unit = 256bits.
			If bit31 is 1, it means overflow
			or any long shader.
		</doc>
		<bitfield name="LENGTH" low="24" high="31" type="uint"/>
	</bitset>
	<bitset name="a3xx_sp_vs_fs_ctrl_reg1" inline="yes">
		<bitfield name="CONSTLENGTH" low="0" high="9" type="uint"/>
		<bitfield name="INITIALOUTSTANDING" low="20" high="23" type="uint"/>
		<!-- probably HALFPRECVAROFFSET goes to bit 31?? -->
		<bitfield name="HALFPRECVAROFFSET" low="24" high="29" type="uint"/>
	</bitset>
	<bitset name="sp_vs_fs_obj_offset_reg" inline="yes">
		<doc>
			From register spec:
			SP_FS_OBJ_OFFSET_REG.CONSTOBJECTSTARTOFFSET [16:24]: Constant object
			start offset in on chip RAM,
			128bit aligned
		</doc>
		<bitfield name="CONSTOBJECTOFFSET" low="16" high="24" type="uint"/>
		<bitfield name="SHADEROBJOFFSET" low="25" high="31" type="uint"/>
	</bitset>
	<bitset name="a3xx_varying_info" inline="yes">
		<bitfield name="REGID" low="0" high="8" type="a3xx_regid"/>
		<!-- I guess 4 bits.. -->
		<bitfield name="COMPMASK" low="9" high="12" type="hex"/>
	</bitset>
	<bitset name="a3xx_sp_vs_out_reg" inline="yes">
		<bitfield name="A" low="0" high="15" type="a3xx_varying_info"/>
		<bitfield name="B" low="16" high="31" type="a3xx_varying_info"/>
	</bitset>
	<bitset name="a3xx_sp_fs_mrt_reg">
		<bitfield name="REGID" low="0" high="7" type="a3xx_regid"/>
		<!-- not really sure about this: size -->
		<bitfield name="PRECISION" pos="8" type="uint"/>
	</bitset>

	<reg32 offset="0x22c0" name="SP_SP_CTRL_REG">
		<!--
			guessing that these are two bits each.. but possibly could
			be just a flag with some other flags in between..
		-->
		<bitfield name="CONSTMODE" low="18" high="19" type="uint"/>
		<bitfield name="SLEEPMODE" low="20" high="21" type="uint"/>
		<bitfield name="LOMODE" low="22" high="23" type="uint"/>
	</reg32>
	<reg32 offset="0x22c4" name="SP_VS_CTRL_REG0" type="a3xx_sp_vs_fs_ctrl_reg0"/>
	<reg32 offset="0x22c5" name="SP_VS_CTRL_REG1" type="a3xx_sp_vs_fs_ctrl_reg1"/>
	<reg32 offset="0x22c6" name="SP_VS_PARAM_REG">
		<bitfield name="POSREGID" low="0" high="7" type="a3xx_regid"/>
		<bitfield name="PSIZEREGID" low="8" high="15" type="a3xx_regid"/>
		<bitfield name="TOTALVSOUTVAR" low="20" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x22c7" name="SP_VS_OUT_REG_0" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22c8" name="SP_VS_OUT_REG_1" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22c9" name="SP_VS_OUT_REG_2" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22ca" name="SP_VS_OUT_REG_3" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22cb" name="SP_VS_OUT_REG_4" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22cc" name="SP_VS_OUT_REG_5" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22cd" name="SP_VS_OUT_REG_6" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22ce" name="SP_VS_OUT_REG_7" type="a3xx_sp_vs_out_reg"/>
	<reg32 offset="0x22d0" name="SP_VS_VPC_DST_REG_0"/>
	<reg32 offset="0x22d1" name="SP_VS_VPC_DST_REG_1"/>
	<reg32 offset="0x22d2" name="SP_VS_VPC_DST_REG_2"/>
	<reg32 offset="0x22d3" name="SP_VS_VPC_DST_REG_3"/>
	<reg32 offset="0x22d4" name="SP_VS_OBJ_OFFSET_REG" type="sp_vs_fs_obj_offset_reg"/>
	<reg32 offset="0x22d5" name="SP_VS_OBJ_START_REG"/>
	<!--
		SP_VS_PVT_MEM_CTRL_REG seems to always be 0x8000001 for gl.. and
		unused for opencl
	 -->
	<reg32 offset="0x22d6" name="SP_VS_PVT_MEM_CTRL_REG"/>
	<reg32 offset="0x22d7" name="SP_VS_PVT_MEM_ADDR_REG"/>
	<reg32 offset="0x22d8" name="SP_VS_PVT_MEM_SIZE_REG"/>
	<reg32 offset="0x22df" name="SP_VS_LENGTH_REG" type="a3xx_vs_fs_length_reg"/>
	<reg32 offset="0x22e0" name="SP_FS_CTRL_REG0" type="a3xx_sp_vs_fs_ctrl_reg0"/>
	<reg32 offset="0x22e1" name="SP_FS_CTRL_REG1" type="a3xx_sp_vs_fs_ctrl_reg1"/>
	<reg32 offset="0x22e2" name="SP_FS_OBJ_OFFSET_REG" type="sp_vs_fs_obj_offset_reg"/>
	<reg32 offset="0x22e3" name="SP_FS_OBJ_START_REG"/>
	<!--
		SP_FS_PVT_MEM_CTRL_REG seems to always be 0x8000001 for gl..  so
		probably only matters for opencl
	 -->
	<reg32 offset="0x22e4" name="SP_FS_PVT_MEM_CTRL_REG"/>
	<reg32 offset="0x22e5" name="SP_FS_PVT_MEM_ADDR_REG"/>
	<reg32 offset="0x22e6" name="SP_FS_PVT_MEM_SIZE_REG"/>
	<reg32 offset="0x22e8" name="SP_FS_FLAT_SHAD_MODE_REG_0"/>
	<reg32 offset="0x22e9" name="SP_FS_FLAT_SHAD_MODE_REG_1"/>
	<reg32 offset="0x22ec" name="SP_FS_OUTPUT_REG"/>
	<reg32 offset="0x22f0" name="SP_FS_MRT_REG_0" type="a3xx_sp_fs_mrt_reg"/>
	<reg32 offset="0x22f1" name="SP_FS_MRT_REG_1" type="a3xx_sp_fs_mrt_reg"/>
	<reg32 offset="0x22f2" name="SP_FS_MRT_REG_2" type="a3xx_sp_fs_mrt_reg"/>
	<reg32 offset="0x22f3" name="SP_FS_MRT_REG_3" type="a3xx_sp_fs_mrt_reg"/>
	<reg32 offset="0x22f4" name="SP_FS_IMAGE_OUTPUT_REG_0"/>
	<reg32 offset="0x22f5" name="SP_FS_IMAGE_OUTPUT_REG_1"/>
	<reg32 offset="0x22f6" name="SP_FS_IMAGE_OUTPUT_REG_2"/>
	<reg32 offset="0x22f7" name="SP_FS_IMAGE_OUTPUT_REG_3"/>
	<reg32 offset="0x22ff" name="SP_FS_LENGTH_REG" type="a3xx_vs_fs_length_reg"/>

	<!-- TPL1 registers -->
	<reg32 offset="0x2340" name="TPL1_TP_VS_TEX_OFFSET"/>
	<reg32 offset="0x2342" name="TPL1_TP_FS_TEX_OFFSET"/>
	<reg32 offset="0x2343" name="TPL1_TP_FS_BORDER_COLOR_BASE_ADDR"/>

	<!-- VBIF registers -->
	<reg32 offset="0x3001" name="VBIF_CLKON"/>
	<reg32 offset="0x300c" name="VBIF_FIXED_SORT_EN"/>
	<reg32 offset="0x300d" name="VBIF_FIXED_SORT_SEL0"/>
	<reg32 offset="0x300e" name="VBIF_FIXED_SORT_SEL1"/>
	<reg32 offset="0x301c" name="VBIF_ABIT_SORT"/>
	<reg32 offset="0x301d" name="VBIF_ABIT_SORT_CONF"/>
	<reg32 offset="0x302a" name="VBIF_GATE_OFF_WRREQ_EN"/>
	<reg32 offset="0x302c" name="VBIF_IN_RD_LIM_CONF0"/>
	<reg32 offset="0x302d" name="VBIF_IN_RD_LIM_CONF1"/>
	<reg32 offset="0x3030" name="VBIF_IN_WR_LIM_CONF0"/>
	<reg32 offset="0x3031" name="VBIF_IN_WR_LIM_CONF1"/>
	<reg32 offset="0x3034" name="VBIF_OUT_RD_LIM_CONF0"/>
	<reg32 offset="0x3035" name="VBIF_OUT_WR_LIM_CONF0"/>
	<reg32 offset="0x3036" name="VBIF_DDR_OUT_MAX_BURST"/>
	<reg32 offset="0x303c" name="VBIF_ARB_CTL"/>
	<reg32 offset="0x3049" name="VBIF_ROUND_ROBIN_QOS_ARB"/>
	<reg32 offset="0x3058" name="VBIF_OUT_AXI_AMEMTYPE_CONF0"/>
	<reg32 offset="0x305e" name="VBIF_OUT_AXI_AOOO_EN"/>
	<reg32 offset="0x305f" name="VBIF_OUT_AXI_AOOO"/>



	<reg32 offset="0x0c01" name="VSC_BIN_SIZE"/>
	<reg32 offset="0x0c02" name="VSC_SIZE_ADDRESS"/>
	<reg32 offset="0x0c06" name="VSC_PIPE_CONFIG_0"/>
	<reg32 offset="0x0c07" name="VSC_PIPE_DATA_ADDRESS_0"/>
	<reg32 offset="0x0c08" name="VSC_PIPE_DATA_LENGTH_0"/>
	<reg32 offset="0x0c09" name="VSC_PIPE_CONFIG_1"/>
	<reg32 offset="0x0c0a" name="VSC_PIPE_DATA_ADDRESS_1"/>
	<reg32 offset="0x0c0b" name="VSC_PIPE_DATA_LENGTH_1"/>
	<reg32 offset="0x0c0c" name="VSC_PIPE_CONFIG_2"/>
	<reg32 offset="0x0c0d" name="VSC_PIPE_DATA_ADDRESS_2"/>
	<reg32 offset="0x0c0e" name="VSC_PIPE_DATA_LENGTH_2"/>
	<reg32 offset="0x0c0f" name="VSC_PIPE_CONFIG_3"/>
	<reg32 offset="0x0c10" name="VSC_PIPE_DATA_ADDRESS_3"/>
	<reg32 offset="0x0c11" name="VSC_PIPE_DATA_LENGTH_3"/>
	<reg32 offset="0x0c12" name="VSC_PIPE_CONFIG_4"/>
	<reg32 offset="0x0c13" name="VSC_PIPE_DATA_ADDRESS_4"/>
	<reg32 offset="0x0c14" name="VSC_PIPE_DATA_LENGTH_4"/>
	<reg32 offset="0x0c15" name="VSC_PIPE_CONFIG_5"/>
	<reg32 offset="0x0c16" name="VSC_PIPE_DATA_ADDRESS_5"/>
	<reg32 offset="0x0c17" name="VSC_PIPE_DATA_LENGTH_5"/>
	<reg32 offset="0x0c18" name="VSC_PIPE_CONFIG_6"/>
	<reg32 offset="0x0c19" name="VSC_PIPE_DATA_ADDRESS_6"/>
	<reg32 offset="0x0c1a" name="VSC_PIPE_DATA_LENGTH_6"/>
	<reg32 offset="0x0c1b" name="VSC_PIPE_CONFIG_7"/>
	<reg32 offset="0x0c1c" name="VSC_PIPE_DATA_ADDRESS_7"/>
	<reg32 offset="0x0c1d" name="VSC_PIPE_DATA_LENGTH_7"/>
	<reg32 offset="0x0ca0" name="GRAS_CL_USER_PLANE_X0"/>
	<reg32 offset="0x0ca1" name="GRAS_CL_USER_PLANE_Y0"/>
	<reg32 offset="0x0ca2" name="GRAS_CL_USER_PLANE_Z0"/>
	<reg32 offset="0x0ca3" name="GRAS_CL_USER_PLANE_W0"/>
	<reg32 offset="0x0ca4" name="GRAS_CL_USER_PLANE_X1"/>
	<reg32 offset="0x0ca5" name="GRAS_CL_USER_PLANE_Y1"/>
	<reg32 offset="0x0ca6" name="GRAS_CL_USER_PLANE_Z1"/>
	<reg32 offset="0x0ca7" name="GRAS_CL_USER_PLANE_W1"/>
	<reg32 offset="0x0ca8" name="GRAS_CL_USER_PLANE_X2"/>
	<reg32 offset="0x0ca9" name="GRAS_CL_USER_PLANE_Y2"/>
	<reg32 offset="0x0caa" name="GRAS_CL_USER_PLANE_Z2"/>
	<reg32 offset="0x0cab" name="GRAS_CL_USER_PLANE_W2"/>
	<reg32 offset="0x0cac" name="GRAS_CL_USER_PLANE_X3"/>
	<reg32 offset="0x0cad" name="GRAS_CL_USER_PLANE_Y3"/>
	<reg32 offset="0x0cae" name="GRAS_CL_USER_PLANE_Z3"/>
	<reg32 offset="0x0caf" name="GRAS_CL_USER_PLANE_W3"/>
	<reg32 offset="0x0cb0" name="GRAS_CL_USER_PLANE_X4"/>
	<reg32 offset="0x0cb1" name="GRAS_CL_USER_PLANE_Y4"/>
	<reg32 offset="0x0cb2" name="GRAS_CL_USER_PLANE_Z4"/>
	<reg32 offset="0x0cb3" name="GRAS_CL_USER_PLANE_W4"/>
	<reg32 offset="0x0cb4" name="GRAS_CL_USER_PLANE_X5"/>
	<reg32 offset="0x0cb5" name="GRAS_CL_USER_PLANE_Y5"/>
	<reg32 offset="0x0cb6" name="GRAS_CL_USER_PLANE_Z5"/>
	<reg32 offset="0x0cb7" name="GRAS_CL_USER_PLANE_W5"/>
	<reg32 offset="0x0cc0" name="RB_GMEM_BASE_ADDR"/>
	<reg32 offset="0x0e44" name="VFD_PERFCOUNTER0_SELECT"/>
	<reg32 offset="0x0e61" name="VPC_VPC_DEBUG_RAM_SEL"/>
	<reg32 offset="0x0e62" name="VPC_VPC_DEBUG_RAM_READ"/>
	<reg32 offset="0x0e82" name="UCHE_CACHE_MODE_CONTROL_REG"/>
	<reg32 offset="0x0ea0" name="UCHE_CACHE_INVALIDATE0_REG"/>
	<reg32 offset="0x0ecb" name="SP_PERFCOUNTER7_SELECT"/>
</domain>

</database>

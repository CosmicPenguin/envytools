<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="freedreno_copyright.xml"/>
<import file="adreno/adreno_common.xml"/>
<import file="adreno/adreno_pm4.xml"/>

<enum name="a4xx_color_fmt">
	<value name="DUMMY" value="0"/>
</enum>

<!-- assume same as a3xx for now.. -->
<enum name="a4xx_rb_blend_opcode">
	<value name="BLEND_DST_PLUS_SRC" value="0"/>
	<value name="BLEND_SRC_MINUS_DST" value="1"/>
	<value name="BLEND_DST_MINUS_SRC" value="2"/>
	<value name="BLEND_MIN_DST_SRC" value="3"/>
	<value name="BLEND_MAX_DST_SRC" value="4"/>
</enum>


<enum name="a4xx_vtx_fmt" prefix="chipset">
	<!-- hmm, shifted one compared to a3xx?!?  -->
	<value name="VFMT4_FLOAT_32" value="0x1"/>
	<value name="VFMT4_FLOAT_32_32" value="0x2"/>
	<value name="VFMT4_FLOAT_32_32_32" value="0x3"/>
	<value name="VFMT4_FLOAT_32_32_32_32" value="0x4"/>

	<value name="VFMT4_FLOAT_16" value="0x5"/>
	<value name="VFMT4_FLOAT_16_16" value="0x6"/>
	<value name="VFMT4_FLOAT_16_16_16" value="0x7"/>
	<value name="VFMT4_FLOAT_16_16_16_16" value="0x8"/>

	<value name="VFMT4_FIXED_32" value="0x9"/>
	<value name="VFMT4_FIXED_32_32" value="0xa"/>
	<value name="VFMT4_FIXED_32_32_32" value="0xb"/>
	<value name="VFMT4_FIXED_32_32_32_32" value="0xc"/>

	<!-- beyond here it does not appear to be shifted -->
	<value name="VFMT4_SHORT_16" value="0x10"/>
	<value name="VFMT4_SHORT_16_16" value="0x11"/>
	<value name="VFMT4_SHORT_16_16_16" value="0x12"/>
	<value name="VFMT4_SHORT_16_16_16_16" value="0x13"/>
	<value name="VFMT4_USHORT_16" value="0x14"/>
	<value name="VFMT4_USHORT_16_16" value="0x15"/>
	<value name="VFMT4_USHORT_16_16_16" value="0x16"/>
	<value name="VFMT4_USHORT_16_16_16_16" value="0x17"/>
	<value name="VFMT4_NORM_SHORT_16" value="0x18"/>
	<value name="VFMT4_NORM_SHORT_16_16" value="0x19"/>
	<value name="VFMT4_NORM_SHORT_16_16_16" value="0x1a"/>
	<value name="VFMT4_NORM_SHORT_16_16_16_16" value="0x1b"/>
	<value name="VFMT4_NORM_USHORT_16" value="0x1c"/>
	<value name="VFMT4_NORM_USHORT_16_16" value="0x1d"/>
	<value name="VFMT4_NORM_USHORT_16_16_16" value="0x1e"/>
	<value name="VFMT4_NORM_USHORT_16_16_16_16" value="0x1f"/>

	<value name="VFMT4_UBYTE_8" value="0x28"/>
	<value name="VFMT4_UBYTE_8_8" value="0x29"/>
	<value name="VFMT4_UBYTE_8_8_8" value="0x2a"/>
	<value name="VFMT4_UBYTE_8_8_8_8" value="0x2b"/>
	<value name="VFMT4_NORM_UBYTE_8" value="0x2c"/>
	<value name="VFMT4_NORM_UBYTE_8_8" value="0x2d"/>
	<value name="VFMT4_NORM_UBYTE_8_8_8" value="0x2e"/>
	<value name="VFMT4_NORM_UBYTE_8_8_8_8" value="0x2f"/>
	<value name="VFMT4_BYTE_8" value="0x30"/>
	<value name="VFMT4_BYTE_8_8" value="0x31"/>
	<value name="VFMT4_BYTE_8_8_8" value="0x32"/>
	<value name="VFMT4_BYTE_8_8_8_8" value="0x33"/>
	<value name="VFMT4_NORM_BYTE_8" value="0x34"/>
	<value name="VFMT4_NORM_BYTE_8_8" value="0x35"/>
	<value name="VFMT4_NORM_BYTE_8_8_8" value="0x36"/>
	<value name="VFMT4_NORM_BYTE_8_8_8_8" value="0x37"/>

	<!-- note: these also have bit 22 set in VFD_DECODE -->
	<value name="VFMT4_UINT_10_10_10_2" value="0x3c"/>
	<value name="VFMT4_NORM_UINT_10_10_10_2" value="0x3d"/>
	<value name="VFMT4_INT_10_10_10_2" value="0x3e"/>
	<value name="VFMT4_NORM_INT_10_10_10_2" value="0x3f"/>
</enum>

<enum name="a4xx_tex_fmt">
	<value name="TFMT4_NORM_USHORT_565" value="0x0b"/>
	<value name="TFMT4_NORM_USHORT_5551" value="0x0a"/>
	<value name="TFMT4_NORM_USHORT_4444" value="0x08"/>
	<value name="TFMT4_NORM_UINT_X8Z24" value="0x47"/>

	<value name="TFMT4_NORM_UINT_2_10_10_10" value="0x21"/>
	<value name="TFMT4_NORM_UINT_A8" value="0x03"/>    <!-- GL_ALPHA -->
	<value name="TFMT4_NORM_UINT_L8_A8" value="0xd"/> <!-- GL_LUMINANCE_ALPHA -->

	<!--
		NOTE: GL_ALPHA and GL_LUMINANCE_ALPHA aren't handled in a similar way
		to float16, float32.. but they seem to use non-standard swizzle too..
		perhaps we can ditch that if the pattern follows of 0xn0, 0xn1, 0xn2,
		0xn3 for 1, 2, 3, 4 components respectively..

		Only formats filled in below are the ones that have been observed by
		the blob or tested.. you can guess what the missing ones are..
	 -->

	<value name="TFMT4_NORM_UINT_8" value="0x04"/>     <!-- GL_LUMINANCE -->
	<value name="TFMT4_NORM_UINT_8_8_8_8" value="0x1c"/>

	<value name="TFMT4_FLOAT_16" value="0x14"/>
	<value name="TFMT4_FLOAT_16_16" value="0x28"/>
	<!-- TFMT_FLOAT_16_16_16 -->
	<value name="TFMT4_FLOAT_16_16_16_16" value="0x35"/>

	<value name="TFMT4_FLOAT_32" value="0x2b"/>
	<value name="TFMT4_FLOAT_32_32" value="0x38"/>
	<!-- TFMT_FLOAT_32_32_32 -->
	<value name="TFMT4_FLOAT_32_32_32_32" value="0x3f"/>
</enum>

<domain name="A4XX" width="32">
	<!-- RB registers -->
	<reg32 offset="0x0cc0" name="RB_GMEM_BASE_ADDR"/>
	<reg32 offset="0x0cd2" name="RB_PERFCTR_CCU_SEL_3"/>
	<reg32 offset="0x0ce0" name="RB_FRAME_BUFFER_DIMENSION">
		<bitfield name="WIDTH" low="0" high="13" type="uint"/>
		<bitfield name="HEIGHT" low="16" high="29" type="uint"/>
	</reg32>
	<reg32 offset="0x20cc" name="RB_CLEAR_COLOR_DW0"/>
	<reg32 offset="0x20cd" name="RB_CLEAR_COLOR_DW1"/>
	<reg32 offset="0x20ce" name="RB_CLEAR_COLOR_DW2"/>
	<reg32 offset="0x20cf" name="RB_CLEAR_COLOR_DW3"/>
	<reg32 offset="0x20a0" name="RB_MODE_CONTROL"/>
	<array offset="0x20a4" name="RB_MRT" stride="5" length="4">
		<reg32 offset="0x0" name="CONTROL">
			<bitfield name="READ_DEST_ENABLE" pos="3" type="boolean"/>
			<!-- both these bits seem to get set when enabling GL_BLEND.. -->
			<bitfield name="BLEND" pos="4" type="boolean"/>
			<bitfield name="BLEND2" pos="5" type="boolean"/>
			<bitfield name="COMPONENT_ENABLE" low="24" high="27" type="hex"/>
		</reg32>
		<reg32 offset="0x1" name="CONTROL2">
			<bitfield name="DITHER_MODE" low="9" high="10" type="adreno_rb_dither_mode"/>
		</reg32>
		<reg32 offset="0x4" name="BLEND_CONTROL">
			<bitfield name="RGB_SRC_FACTOR" low="0" high="4" type="adreno_rb_blend_factor"/>
			<bitfield name="RGB_BLEND_OPCODE" low="5" high="7" type="a4xx_rb_blend_opcode"/>
			<bitfield name="RGB_DEST_FACTOR" low="8" high="12" type="adreno_rb_blend_factor"/>
			<bitfield name="ALPHA_SRC_FACTOR" low="16" high="20" type="adreno_rb_blend_factor"/>
			<bitfield name="ALPHA_BLEND_OPCODE" low="21" high="23" type="a4xx_rb_blend_opcode"/>
			<bitfield name="ALPHA_DEST_FACTOR" low="24" high="28" type="adreno_rb_blend_factor"/>
		</reg32>
	</array>
	<reg32 offset="0x20f8" name="RB_RENDER_CONTROL">
		<bitfield name="ALPHA_TEST" pos="8" type="boolean"/>
		<bitfield name="ALPHA_TEST_FUNC" low="9" high="11" type="adreno_compare_func"/>
	</reg32>
	<reg32 offset="0x20fc" name="RB_COPY_CONTROL">
		<!-- not sure # of bits -->
		<bitfield name="MSAA_RESOLVE" low="0" high="1" type="a3xx_msaa_samples"/>
		<bitfield name="MODE" low="4" high="6" type="adreno_rb_copy_control_mode"/>
		<bitfield name="FASTCLEAR" low="8" high="11" type="hex"/>
		<bitfield name="GMEM_BASE" low="14" high="31" shr="14" type="hex"/>
	</reg32>
	<reg32 offset="0x20fd" name="RB_COPY_DEST_BASE">
		<bitfield name="BASE" low="4" high="31" shr="4" type="hex"/>
	</reg32>
	<reg32 offset="0x20fe" name="RB_COPY_DEST_PITCH">
		<doc>actually, appears to be pitch in bytes, so really is a stride</doc>
		<!-- not actually sure about max pitch... -->
		<bitfield name="PITCH" low="0" high="31" shr="5" type="uint"/>
	</reg32>
	<reg32 offset="0x20ff" name="RB_COPY_DEST_INFO">
		<bitfield name="FORMAT" low="0" high="5" type="a4xx_color_fmt"/>
		<bitfield name="DITHER_MODE" low="10" high="11" type="adreno_rb_dither_mode"/>
		<bitfield name="COMPONENT_ENABLE" low="14" high="17" type="hex"/>
		<bitfield name="ENDIAN" low="18" high="20" type="adreno_rb_surface_endian"/>
	</reg32>
	<reg32 offset="0x2101" name="RB_DEPTH_CONTROL">
		<!--
			guessing that this matches a2xx with the stencil fields
			moved out into RB_STENCIL_CONTROL?
		 -->
		<bitfield name="FRAG_WRITES_Z" pos="0" type="boolean"/>
		<bitfield name="Z_ENABLE" pos="1" type="boolean"/>
		<bitfield name="Z_WRITE_ENABLE" pos="2" type="boolean"/>
		<bitfield name="ZFUNC" low="4" high="6" type="adreno_compare_func"/>
		<bitfield name="BF_ENABLE" pos="7" type="boolean"/>
		<bitfield name="EARLY_Z_DISABLE" pos="16" type="boolean"/>
		<doc>Z_TEST_ENABLE bit is set for zfunc other than GL_ALWAYS or GL_NEVER</doc>
		<bitfield name="Z_TEST_ENABLE" pos="31" type="boolean"/>
	</reg32>
	<reg32 offset="0x2102" name="RB_DEPTH_CLEAR"/>
	<reg32 offset="0x2104" name="RB_DEPTH_PITCH" shr="4" type="uint">
		<doc>pitch of depth/stencil buffer</doc>
	</reg32>
	<reg32 offset="0x2105" name="RB_DEPTH_PITCH2" shr="4" type="uint">
		<doc>???</doc>
	</reg32>
	<reg32 offset="0x2106" name="RB_STENCIL_CONTROL">
		<bitfield name="STENCIL_ENABLE" pos="0" type="boolean"/>
		<bitfield name="STENCIL_ENABLE_BF" pos="1" type="boolean"/>
		<!--
			set for stencil operations that require read from stencil
			buffer, but not for example for stencil clear (which does
			not require read).. so guessing this is analogous to
			READ_DEST_ENABLE for color buffer..
		 -->
		<bitfield name="STENCIL_READ" pos="2" type="boolean"/>
		<bitfield name="FUNC" low="8" high="10" type="adreno_compare_func"/>
		<bitfield name="FAIL" low="11" high="13" type="adreno_stencil_op"/>
		<bitfield name="ZPASS" low="14" high="16" type="adreno_stencil_op"/>
		<bitfield name="ZFAIL" low="17" high="19" type="adreno_stencil_op"/>
		<bitfield name="FUNC_BF" low="20" high="22" type="adreno_compare_func"/>
		<bitfield name="FAIL_BF" low="23" high="25" type="adreno_stencil_op"/>
		<bitfield name="ZPASS_BF" low="26" high="28" type="adreno_stencil_op"/>
		<bitfield name="ZFAIL_BF" low="29" high="31" type="adreno_stencil_op"/>
	</reg32>
	<reg32 offset="0x210b" name="RB_STENCILREFMASK" type="adreno_rb_stencilrefmask"/>
	<reg32 offset="0x210c" name="RB_STENCILREFMASK_BF" type="adreno_rb_stencilrefmask"/>
	<reg32 offset="0x210d" name="RB_BIN_OFFSET" type="adreno_reg_xy"/>
	<reg32 offset="0x213f" name="RB_VPORT_Z_CLAMP_MAX_15"/>

	<!-- RBBM registers -->
	<reg32 offset="0x0000" name="RBBM_HW_VERSION"/>
	<reg32 offset="0x0002" name="RBBM_HW_CONFIGURATION"/>
	<reg32 offset="0x0020" name="RBBM_CLOCK_CTL"/>
	<reg32 offset="0x0021" name="RBBM_SP_HYST_CNT"/>
	<reg32 offset="0x0023" name="RBBM_AHB_CTL0"/>
	<reg32 offset="0x0024" name="RBBM_AHB_CTL1"/>
	<reg32 offset="0x0025" name="RBBM_AHB_CMD"/>
	<reg32 offset="0x0026" name="RBBM_RB_SUB_BLOCK_SEL_CTL"/>
	<reg32 offset="0x0028" name="RBBM_RAM_ACC_63_32"/>
	<reg32 offset="0x002b" name="RBBM_WAIT_IDLE_CLOCKS_CTL"/>
	<reg32 offset="0x002f" name="RBBM_INTERFACE_HANG_INT_CTL"/>
	<reg32 offset="0x0034" name="RBBM_INTERFACE_HANG_MASK_CTL4"/>
	<reg32 offset="0x0036" name="RBBM_INT_CLEAR_CMD"/>
	<reg32 offset="0x0037" name="RBBM_INT_0_MASK"/>
	<reg32 offset="0x003f" name="RBBM_AHB_DEBUG_CTL"/>
	<reg32 offset="0x0041" name="RBBM_VBIF_DEBUG_CTL"/>
	<reg32 offset="0x0045" name="RBBM_BLOCK_SW_RESET_CMD"/>
	<reg32 offset="0x0047" name="RBBM_RESET_CYCLES"/>
	<reg32 offset="0x0049" name="RBBM_EXT_TRACE_BUS_CTL"/>
	<reg32 offset="0x009c" name="RBBM_PERFCTR_CP_0_LO"/>
	<reg32 offset="0x0168" name="RBBM_PERFCTR_PWR_1_LO"/>
	<reg32 offset="0x0170" name="RBBM_PERFCTR_CTL"/>
	<reg32 offset="0x0171" name="RBBM_PERFCTR_LOAD_CMD0"/>
	<reg32 offset="0x0172" name="RBBM_PERFCTR_LOAD_CMD1"/>
	<reg32 offset="0x0173" name="RBBM_PERFCTR_LOAD_CMD2"/>
	<reg32 offset="0x0174" name="RBBM_PERFCTR_LOAD_VALUE_LO"/>
	<reg32 offset="0x017a" name="RBBM_GPU_BUSY_MASKED"/>
	<reg32 offset="0x017d" name="RBBM_INT_0_STATUS"/>
	<reg32 offset="0x0182" name="RBBM_CLOCK_STATUS"/>
	<reg32 offset="0x0189" name="RBBM_AHB_STATUS"/>
	<reg32 offset="0x018f" name="RBBM_AHB_ERROR_STATUS"/>
	<reg32 offset="0x0191" name="RBBM_STATUS"/>
	<reg32 offset="0x019f" name="RBBM_INTERFACE_RRDY_STATUS5"/>

	<!-- CP registers -->
	<reg32 offset="0x0228" name="CP_SCRATCH_UMASK"/>
	<reg32 offset="0x0229" name="CP_SCRATCH_ADDR"/>
	<reg32 offset="0x0200" name="CP_RB_BASE"/>
	<reg32 offset="0x0201" name="CP_RB_CNTL"/>
	<reg32 offset="0x0205" name="CP_RB_WPTR"/>
	<reg32 offset="0x0203" name="CP_RB_RPTR_ADDR"/>
	<reg32 offset="0x0204" name="CP_RB_RPTR"/>
	<reg32 offset="0x0206" name="CP_IB1_BASE"/>
	<reg32 offset="0x0207" name="CP_IB1_BUFSZ"/>
	<reg32 offset="0x0208" name="CP_IB2_BASE"/>
	<reg32 offset="0x0209" name="CP_IB2_BUFSZ"/>
	<reg32 offset="0x0217" name="CP_ME_RB_DONE_DATA"/>
	<reg32 offset="0x0219" name="CP_QUEUE_THRESH2"/>
	<reg32 offset="0x021b" name="CP_MERCIU_SIZE"/>
	<reg32 offset="0x0223" name="CP_PFP_UCODE_ADDR"/>
	<reg32 offset="0x0224" name="CP_PFP_UCODE_DATA"/>
	<reg32 offset="0x0225" name="CP_ME_RAM_WADDR"/>
	<reg32 offset="0x0226" name="CP_ME_RAM_RADDR"/>
	<reg32 offset="0x0227" name="CP_ME_RAM_DATA"/>
	<reg32 offset="0x022a" name="CP_PREEMPT"/>
	<reg32 offset="0x022c" name="CP_CNTL"/>
	<reg32 offset="0x022d" name="CP_ME_CNTL"/>
	<reg32 offset="0x022e" name="CP_DEBUG"/>
	<reg32 offset="0x0231" name="CP_DEBUG_ECO_CONTROL"/>
	<reg32 offset="0x0232" name="CP_DRAW_STATE_ADDR"/>
	<reg32 offset="0x0240" name="CP_PROTECT_REG_0"/>
	<reg32 offset="0x0250" name="CP_PROTECT_CTRL"/>
	<reg32 offset="0x04c0" name="CP_ST_BASE"/>
	<reg32 offset="0x04ce" name="CP_STQ_AVAIL"/>
	<reg32 offset="0x04d0" name="CP_MERCIU_STAT"/>
	<reg32 offset="0x04d2" name="CP_WFI_PEND_CTR"/>
	<reg32 offset="0x04dd" name="CP_EVENTS_IN_FLIGHT"/>
	<reg32 offset="0x0500" name="CP_PERFCTR_CP_SEL_0"/>
	<reg32 offset="0x050b" name="CP_PERFCOMBINER_SELECT"/>
	<array offset="0x0578" name="CP_SCRATCH" stride="1" length="23">
		<reg32 offset="0x0" name="REG"/>
	</array>

	<!-- SP registers -->
	<reg32 offset="0x0ec0" name="SP_VS_STATUS"/>
	<reg32 offset="0x0ecf" name="SP_PERFCTR_SP_SEL_11"/>
	<reg32 offset="0x22c0" name="SP_SP_CTRL"/>
	<reg32 offset="0x22c1" name="SP_INSTR_CACHE_CTRL"/>

	<bitset name="a4xx_sp_vs_fs_ctrl_reg0" inline="yes">
		<!--
			NOTE that SP_{VS,FS}_CTRL_REG1 are different, but so far REG0
			appears to be the same..
		-->
		<bitfield name="THREADMODE" pos="0" type="a3xx_threadmode"/>
		<bitfield name="INSTRBUFFERMODE" pos="1" type="a3xx_instrbuffermode"/>
		<!-- maybe CACHEINVALID is two bits?? -->
		<bitfield name="CACHEINVALID" pos="2" type="boolean"/>
		<doc>
			The full/half register footprint is in units of four components,
			so if r0.x is used, that counts as all of r0.[xyzw] as used.
			There are separate full/half register footprint values as the
			full and half registers are independent (not overlapping).
			Presumably the thread scheduler hardware allocates the full/half
			register names from the actual physical register file and
			handles the register renaming.
		</doc>
		<bitfield name="HALFREGFOOTPRINT" low="4" high="9" type="uint"/>
		<bitfield name="FULLREGFOOTPRINT" low="10" high="17" type="uint"/>
		<!-- maybe INOUTREGOVERLAP is a bitflag? -->
		<bitfield name="INOUTREGOVERLAP" low="18" high="19" type="uint"/>
		<bitfield name="THREADSIZE" pos="20" type="a3xx_threadsize"/>
		<bitfield name="SUPERTHREADMODE" pos="21" type="boolean"/>
		<bitfield name="PIXLODENABLE" pos="22" type="boolean"/>
	</bitset>

	<reg32 offset="0x22c4" name="SP_VS_CTRL_REG0" type="a4xx_sp_vs_fs_ctrl_reg0"/>
	<reg32 offset="0x22c5" name="SP_VS_CTRL_REG1">
		<bitfield name="INITIALOUTSTANDING" low="24" high="29" type="uint"/>
	</reg32>
	<reg32 offset="0x22c6" name="SP_VS_PARAM_REG">
		<bitfield name="POSREGID" low="0" high="7" type="a3xx_regid"/>
		<bitfield name="PSIZEREGID" low="8" high="15" type="a3xx_regid"/>
		<bitfield name="TOTALVSOUTVAR" low="20" high="31" type="uint"/>
	</reg32>
	<array offset="0x22c7" name="SP_VS_OUT" stride="1" length="16">
		<reg32 offset="0x0" name="REG">
			<bitfield name="A_REGID" low="0" high="8" type="a3xx_regid"/>
			<bitfield name="A_COMPMASK" low="9" high="12" type="hex"/>
			<bitfield name="B_REGID" low="16" high="24" type="a3xx_regid"/>
			<bitfield name="B_COMPMASK" low="25" high="28" type="hex"/>
		</reg32>
	</array>
	<array offset="0x22d8" name="SP_VS_VPC_DST" stride="1" length="8">
		<reg32 offset="0x0" name="REG">
			<doc>
				These seem to be offsets for storage of the varyings.
				Always seems to start from 8, possibly loc 0 and 4
				are for gl_Position and gl_PointSize?
			</doc>
			<bitfield name="OUTLOC0" low="0" high="7" type="uint"/>
			<bitfield name="OUTLOC1" low="8" high="15" type="uint"/>
			<bitfield name="OUTLOC2" low="16" high="23" type="uint"/>
			<bitfield name="OUTLOC3" low="24" high="31" type="uint"/>
		</reg32>
	</array>
	<reg32 offset="0x22e1" name="SP_VS_OBJ_START"/>
	<reg32 offset="0x22e2" name="SP_VS_PVT_MEM_PARAM"/>"
	<reg32 offset="0x22e3" name="SP_VS_PVT_MEM_ADDR"/>
	<reg32 offset="0x22e8" name="SP_FS_CTRL_REG0" type="a4xx_sp_vs_fs_ctrl_reg0"/>
	<reg32 offset="0x22e9" name="SP_FS_CTRL_REG1">
	</reg32>
	<reg32 offset="0x22eb" name="SP_FS_OBJ_START"/>
	<reg32 offset="0x22ec" name="SP_FS_PVT_MEM_PARAM"/>"
	<reg32 offset="0x22ed" name="SP_FS_PVT_MEM_ADDR"/>
	<array offset="0x22f1" name="SP_FS_MRT" stride="1" length="4">
		<reg32 offset="0x0" name="REG">
			<bitfield name="REGID" low="0" high="7" type="a3xx_regid"/>
			<bitfield name="HALF_PRECISION" pos="8" type="boolean"/>
		</reg32>
	</array>
	<array offset="0x22f5" name="SP_FS_IMAGE_OUTPUT" stride="1" length="4">
		<reg32 offset="0x0" name="REG">
			<bitfield name="MRTFORMAT" low="0" high="5" type="a3xx_color_fmt"/>
		</reg32>
	</array>
	<reg32 offset="0x2360" name="SP_GS_LENGTH"/>

	<!-- VPC registers -->
	<reg32 offset="0x0e60" name="VPC_DEBUG_RAM_SEL"/>
	<reg32 offset="0x0e61" name="VPC_DEBUG_RAM_READ"/>
	<reg32 offset="0x0e64" name="VPC_DEBUG_ECO_CONTROL"/>
	<reg32 offset="0x0e68" name="VPC_PERFCTR_VPC_SEL_3"/>
	<reg32 offset="0x2140" name="VPC_ATTR">
		<bitfield name="TOTALATTR" low="0" high="8" type="uint"/>
		<!-- PSIZE bit set if gl_PointSize written: -->
		<bitfield name="PSIZE" pos="9" type="boolean"/>
		<bitfield name="THRDASSIGN" low="12" high="13" type="uint"/>
		<bitfield name="ENABLE" pos="25" type="boolean"/>
		<bitfield name="LMSIZE" low="28" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x2141" name="VPC_PACK">
		<bitfield name="NUMFPNONPOSVAR" low="8" high="15" type="uint"/>
		<bitfield name="NUMNONPOSVSVAR" low="16" high="23" type="uint"/>
	</reg32>
	<array offset="0x2142" name="VPC_VARYING_INTERP" stride="1" length="8">
		<reg32 offset="0x0" name="MODE"/>
	</array>
	<array offset="0x214a" name="VPC_VARYING_PS_REPL" stride="1" length="8">
		<reg32 offset="0x0" name="MODE"/>
	</array>

	<reg32 offset="0x216e" name="VPC_SO_FLUSH_WADDR_3"/>

	<!-- VSC registers -->
	<reg32 offset="0x0c00" name="VSC_BIN_SIZE">
		<bitfield name="WIDTH" low="0" high="4" shr="5" type="uint"/>
		<bitfield name="HEIGHT" low="5" high="9" shr="5" type="uint"/>
	</reg32>
	<reg32 offset="0x0c01" name="VSC_SIZE_ADDRESS"/>
	<reg32 offset="0x0c02" name="VSC_SIZE_ADDRESS2"/>
	<reg32 offset="0x0c03" name="VSC_DEBUG_ECO_CONTROL"/>
	<array offset="0x0c08" name="VSC_PIPE_CONFIG" stride="1" length="8">
		<reg32 offset="0x0" name="REG">
			<doc>
				Configures the mapping between VSC_PIPE buffer and
				bin, X/Y specify the bin index in the horiz/vert
				direction (0,0 is upper left, 0,1 is leftmost bin
				on second row, and so on).  W/H specify the number
				of bins assigned to this VSC_PIPE in the horiz/vert
				dimension.
			</doc>
			<bitfield name="X" low="0" high="9" type="uint"/>
			<bitfield name="Y" low="10" high="19" type="uint"/>
			<bitfield name="W" low="20" high="23" type="uint"/>
			<bitfield name="H" low="24" high="27" type="uint"/>
		</reg32>
	</array>
	<array offset="0x0c10" name="VSC_PIPE_DATA_ADDRESS" stride="1" length="8">
		<reg32 offset="0x0" name="REG"/>
	</array>
	<array offset="0x0c18" name="VSC_PIPE_DATA_LENGTH" stride="1" length="8">
		<reg32 offset="0x0" name="REG"/>
	</array>
	<reg32 offset="0x0c41" name="VSC_PIPE_PARTIAL_POSN_1"/>
	<reg32 offset="0x0c50" name="VSC_PERFCTR_VSC_SEL_0"/>
	<reg32 offset="0x0c51" name="VSC_PERFCTR_VSC_SEL_1"/>

	<!-- VFD registers -->
	<reg32 offset="0x0e40" name="VFD_DEBUG_CONTROL"/>
	<reg32 offset="0x0e4a" name="VFD_PERFCTR_VFD_SEL_7"/>
	<reg32 offset="0x2200" name="VFD_CONTROL_0"/>
	<reg32 offset="0x2201" name="VFD_CONTROL_1">
		<doc>MAXSTORAGE could be # of attributes/vbo's</doc>
		<bitfield name="MAXSTORAGE" low="0" high="15" type="uint"/>
		<!--
			always seem to be 252 except when entire register is zero'd,
			but in these cases it is overwritten with non-zero value
			before the next DRAW_INDX
		 -->
		<bitfield name="REGID4VTX" low="16" high="23" type="a3xx_regid"/>
		<bitfield name="REGID4INST" low="24" high="31" type="a3xx_regid"/>
	</reg32>
	<reg32 offset="0x2202" name="VFD_CONTROL_2"/>
	<reg32 offset="0x2203" name="VFD_CONTROL_3"/>
	<reg32 offset="0x2204" name="VFD_CONTROL_4"/>
	<reg32 offset="0x2208" name="VFD_INDEX_OFFSET"/>
	<array offset="0x220a" name="VFD_FETCH" stride="4" length="32">
		<reg32 offset="0x0" name="INSTR_0">
			<bitfield name="FETCHSIZE" low="0" high="6" type="uint"/>
			<bitfield name="BUFSTRIDE" low="7" high="16" type="uint"/>
			<bitfield name="SWITCHNEXT" pos="19" type="boolean"/>
			<bitfield name="INDEXCODE" low="18" high="23" type="uint"/>
			<bitfield name="STEPRATE" low="24" high="31" type="uint"/>
		</reg32>
		<reg32 offset="0x1" name="INSTR_1"/>
		<reg32 offset="0x2" name="INSTR_2">
			<bitfield name="SIZE" low="4" high="31" shr="4"/>
		</reg32>
		<!-- INSTR_3 seems to be always 1 -->
		<reg32 offset="0x3" name="INSTR_3"/>
	</array>
	<array offset="0x228a" name="VFD_DECODE" stride="1" length="32">
		<reg32 offset="0x0" name="INSTR">
			<bitfield name="WRITEMASK" low="0" high="3" type="hex"/>
			<!-- not sure if this is a bit flag and another flag above it, or?? -->
			<bitfield name="CONSTFILL" pos="4" type="boolean"/>
			<bitfield name="FORMAT" low="6" high="11" type="a4xx_vtx_fmt"/>
			<bitfield name="REGID" low="12" high="19" type="a3xx_regid"/>
			<doc>SHIFTCNT appears to be size, ie. FLOAT_32_32_32 is 12, and BYTE_8 is 1</doc>
			<bitfield name="SWAP" low="22" high="23" type="a4xx_color_swap"/>
			<bitfield name="SHIFTCNT" low="24" high="28" type="uint"/>
			<bitfield name="LASTCOMPVALID" pos="29" type="boolean"/>
			<bitfield name="SWITCHNEXT" pos="30" type="boolean"/>
		</reg32>
	</array>

	<!-- TPL1 registers -->
	<reg32 offset="0x0f00" name="TPL1_DEBUG_ECO_CONTROL"/>
	<reg32 offset="0x0f0b" name="TPL1_PERFCTR_TP_SEL_7"/>
	<reg32 offset="0x2380" name="TPL1_TP_TEX_OFFSET"/>
	<reg32 offset="0x23a6" name="TPL1_TP_CS_TEXMEMOBJ_BASE_ADDR"/>

	<!-- GRAS registers -->
	<reg32 offset="0x0c80" name="GRAS_TSE_STATUS"/>
	<reg32 offset="0x0c81" name="GRAS_DEBUG_ECO_CONTROL"/>
	<reg32 offset="0x0c88" name="GRAS_PERFCTR_TSE_SEL_0"/>
	<reg32 offset="0x0c8b" name="GRAS_PERFCTR_TSE_SEL_3"/>
	<reg32 offset="0x2000" name="GRAS_CL_CLIP_CNTL"/>
	<reg32 offset="0x2004" name="GRAS_CL_GB_CLIP_ADJ">
		<bitfield name="HORZ" low="0" high="9" type="uint"/>
		<bitfield name="VERT" low="10" high="19" type="uint"/>
	</reg32>
	<reg32 offset="0x2008" name="GRAS_CL_VPORT_XOFFSET_0" type="float"/>
	<reg32 offset="0x2009" name="GRAS_CL_VPORT_XSCALE_0" type="float"/>
	<reg32 offset="0x200a" name="GRAS_CL_VPORT_YOFFSET_0" type="float"/>
	<reg32 offset="0x200b" name="GRAS_CL_VPORT_YSCALE_0" type="float"/>
	<reg32 offset="0x200c" name="GRAS_CL_VPORT_ZOFFSET_0" type="float"/>
	<reg32 offset="0x200d" name="GRAS_CL_VPORT_ZSCALE_0" type="float"/>
	<reg32 offset="0x2070" name="GRAS_SU_POINT_MINMAX">
		<bitfield name="MIN" low="0" high="15" type="ufixed" radix="4"/>
		<bitfield name="MAX" low="16" high="31" type="ufixed" radix="4"/>
	</reg32>
	<reg32 offset="0x2071" name="GRAS_SU_POINT_SIZE" type="fixed" radix="4"/>
	<reg32 offset="0x209f" name="GRAS_SC_EXTENT_WINDOW_TL"/>
	<reg32 offset="0x207c" name="GRAS_SC_SCREEN_SCISSOR_TL" type="adreno_reg_xy"/>
	<reg32 offset="0x207d" name="GRAS_SC_SCREEN_SCISSOR_BR" type="adreno_reg_xy"/>
	<reg32 offset="0x209b" name="GRAS_SC_WINDOW_SCISSOR_TL" type="adreno_reg_xy"/>
	<reg32 offset="0x209c" name="GRAS_SC_WINDOW_SCISSOR_BR" type="adreno_reg_xy"/>
	<reg32 offset="0x2078" name="GRAS_SU_MODE_CONTROL">
		<bitfield name="CULL_FRONT" pos="0" type="boolean"/>
		<bitfield name="CULL_BACK" pos="1" type="boolean"/>
		<bitfield name="FRONT_CW" pos="2" type="boolean"/>
		<bitfield name="LINEHALFWIDTH" low="3" high="10" radix="2" type="fixed"/>
		<bitfield name="POLY_OFFSET" pos="11" type="boolean"/>
	</reg32>
	<reg32 offset="0x207b" name="GRAS_SC_CONTROL">
		<!-- complete wild-ass-guess for sizes of these bitfields.. -->
		<bitfield name="RENDER_MODE" low="2" high="3" type="a3xx_render_mode"/>
		<bitfield name="RASTER_MODE" low="12" high="15"/>
	</reg32>

	<!-- UCHE registers -->
	<reg32 offset="0x0e80" name="UCHE_CACHE_MODE_CONTROL"/>
	<reg32 offset="0x0e84" name="UCHE_TRAP_BASE_HI"/>
	<reg32 offset="0x0e88" name="UCHE_CACHE_STATUS"/>
	<reg32 offset="0x0e95" name="UCHE_PERFCTR_UCHE_SEL_7"/>

	<!-- HLSQ registers -->
	<reg32 offset="0x0e00" name="HLSQ_TIMEOUT_THRESHOLD"/>
	<reg32 offset="0x0e04" name="HLSQ_DEBUG_ECO_CONTROL"/>
	<reg32 offset="0x0e0e" name="HLSQ_PERF_PIPE_MASK"/>
	<reg32 offset="0x23c0" name="HLSQ_CONTROL_0">
		<!-- I guess same as a3xx, but so far only seen 08000050 -->
		<bitfield name="FSTHREADSIZE" pos="4" type="a3xx_threadsize"/>
		<bitfield name="FSSUPERTHREADENABLE" pos="6" type="boolean"/>
		<bitfield name="SPSHADERRESTART" pos="9" type="boolean"/>
		<bitfield name="RESERVED2" pos="10" type="boolean"/>
		<bitfield name="CHUNKDISABLE" pos="26" type="boolean"/>
		<bitfield name="CONSTSWITCHMODE" pos="27" type="boolean"/>
		<bitfield name="LAZYUPDATEDISABLE" pos="28" type="boolean"/>
		<bitfield name="SPCONSTFULLUPDATE" pos="29" type="boolean"/>
		<bitfield name="TPFULLUPDATE" pos="30" type="boolean"/>
		<bitfield name="SINGLECONTEXT" pos="31" type="boolean"/>
	</reg32>
	<reg32 offset="0x23c1" name="HLSQ_CONTROL_1_REG">
		<bitfield name="VSTHREADSIZE" pos="6" type="a3xx_threadsize"/>
		<bitfield name="VSSUPERTHREADENABLE" pos="8" type="boolean"/>
		<bitfield name="RESERVED1" pos="9" type="boolean"/>
		<!-- set if gl_FragCoord.[zw] used in frag shader: -->
		<bitfield name="ZWCOORD" pos="25" type="boolean"/>
	</reg32>
	<reg32 offset="0x23c2" name="HLSQ_CONTROL_2_REG">
		<bitfield name="PRIMALLOCTHRESHOLD" low="26" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0x23c3" name="HLSQ_CONTROL_3_REG">
		<!-- register loaded with position (bary.f, gl_FragCoord, etc) -->
		<bitfield name="REGID" low="0" high="7" type="a3xx_regid"/>
	</reg32>

	<reg32 offset="0x23db" name="HLSQ_UPDATE_CONTROL"/>

	<!-- PC registers -->
	<reg32 offset="0x0d00" name="PC_BINNING_COMMAND">
		<bitfield name="BINNING_ENABLE" pos="0" type="boolean"/>
	</reg32>
	<reg32 offset="0x0d0c" name="PC_DRAWCALL_SETUP_OVERRIDE"/>
	<reg32 offset="0x0d10" name="PC_PERFCTR_PC_SEL_0"/>
	<reg32 offset="0x0d17" name="PC_PERFCTR_PC_SEL_7"/>
	<reg32 offset="0x21c0" name="PC_BIN_BASE"/>
	<reg32 offset="0x21c6" name="PC_RESTART_INDEX"/>
	<reg32 offset="0x21e5" name="PC_GS_PARAM"/>
	<reg32 offset="0x21e7" name="PC_HS_PARAM"/>

	<!-- VBIF registers -->
	<reg32 offset="0x301c" name="VBIF_ABIT_SORT"/>
	<reg32 offset="0x301d" name="VBIF_ABIT_SORT_CONF"/>
	<reg32 offset="0x302a" name="VBIF_GATE_OFF_WRREQ_EN"/>
	<reg32 offset="0x302c" name="VBIF_IN_RD_LIM_CONF0"/>
	<reg32 offset="0x302d" name="VBIF_IN_RD_LIM_CONF1"/>
	<reg32 offset="0x3030" name="VBIF_IN_WR_LIM_CONF0"/>
	<reg32 offset="0x3031" name="VBIF_IN_WR_LIM_CONF1"/>
	<reg32 offset="0x3049" name="VBIF_ROUND_ROBIN_QOS_ARB"/>
</domain>


<domain name="A4XX_TEX_SAMP" width="32">
	<doc>Texture sampler dwords</doc>
	<enum name="a4xx_tex_filter">
		<value name="A4XX_TEX_NEAREST" value="0"/>
		<value name="A4XX_TEX_LINEAR" value="1"/>
	</enum>
	<enum name="a4xx_tex_clamp">
		<value name="A4XX_TEX_REPEAT" value="0"/>
		<value name="A4XX_TEX_CLAMP_TO_EDGE" value="1"/>
		<value name="A4XX_TEX_MIRROR_REPEAT" value="2"/>
		<value name="A4XX_TEX_CLAMP_NONE" value="3"/>
	</enum>
	<reg32 offset="0" name="0">
	</reg32>
	<reg32 offset="1" name="1">
		<!-- TODO check radix.. -->
		<bitfield name="MAX_LOD" low="8" high="19" type="ufixed" radix="6"/>
		<bitfield name="MIN_LOD" low="20" high="31" type="ufixed" radix="6"/>
	</reg32>
</domain>

<domain name="A4XX_TEX_CONST" width="32">
	<doc>Texture constant dwords</doc>
	<enum name="a4xx_tex_swiz">
		<!-- same as a2xx? -->
		<value name="A4XX_TEX_X" value="0"/>
		<value name="A4XX_TEX_Y" value="1"/>
		<value name="A4XX_TEX_Z" value="2"/>
		<value name="A4XX_TEX_W" value="3"/>
		<value name="A4XX_TEX_ZERO" value="4"/>
		<value name="A4XX_TEX_ONE" value="5"/>
	</enum>
	<enum name="a4xx_tex_type">
		<value name="A4XX_TEX_1D" value="0"/>
		<value name="A4XX_TEX_2D" value="1"/>
		<value name="A4XX_TEX_CUBE" value="2"/>
		<value name="A4XX_TEX_3D" value="3"/>
	</enum>
	<reg32 offset="0" name="0">
		<bitfield name="TILED" pos="0" type="boolean"/>
		<bitfield name="SWIZ_X" low="4" high="6" type="a4xx_tex_swiz"/>
		<bitfield name="SWIZ_Y" low="7" high="9" type="a4xx_tex_swiz"/>
		<bitfield name="SWIZ_Z" low="10" high="12" type="a4xx_tex_swiz"/>
		<bitfield name="SWIZ_W" low="13" high="15" type="a4xx_tex_swiz"/>
		<bitfield name="FMT" low="22" high="28" type="a4xx_tex_fmt"/>
	</reg32>
	<reg32 offset="1" name="1">
		<bitfield name="HEIGHT" low="0" high="14" type="uint"/>
		<bitfield name="WIDTH" low="15" high="28" type="uint"/>
	</reg32>
	<reg32 offset="2" name="2">
		<doc>Pitch in bytes (so actually stride)</doc>
		<bitfield name="PITCH" low="9" high="29" type="uint"/>
	</reg32>
</domain>

</database>
